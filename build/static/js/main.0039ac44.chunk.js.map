{"version":3,"sources":["navigation-bar/NavigationBar.jsx","footer/Footer.jsx","contact-page/ContactPage.jsx","images/header-background.JPG","images/ManiSK.jpeg","about-me/AboutMe.jsx","projects/ProjectWorks.jsx","home-page/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","history","useHistory","bg","variant","className","Item","Link","onClick","push","useStyles","makeStyles","footer","width","height","backgroundColor","display","alignItems","footerContent","color","fontFamily","marginBottom","paddingLeft","Footer","classes","contactPage","minHeight","justifyContent","background","messageBox","paddingRight","paddingTop","marginLeft","borderStyle","borderColor","flexDirection","submit","letterSpacing","marginRight","marginTop","cursor","border","borderRadius","addressBox","address","fontSize","fontWeight","linkedInIcon","centeringModal","position","top","emailAddress","query","ContactPage","useState","show","setShow","handleClose","email","setEmail","setQuery","type","placeholder","onChange","event","target","value","rows","Button","message","a","console","log","Axios","post","result","setTimeout","error","Modal","onHide","Header","closeButton","Title","Body","id","href","icon","faLinkedin","aboutMe","paddingBottom","imageItem","detailsItem","lineHeight","float","AboutMe","xs","src","ProfileImage","alt","projectWork","textAlign","alignSelf","webSite","borderBottom","codeSampleDesign","ProjectWork","homePage","verticalAlign","backgroundImage","MyImage","backgroundPosition","backgroundSize","backgroundRepeat","margin","homePageText","HomePage","App","CssBaseline","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0039ac44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from \"react-bootstrap/cjs/Navbar\";\r\nimport Nav from \"react-bootstrap/cjs/Nav\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport function NavigationBar() {\r\n\r\n        const history = useHistory();\r\n\r\n        function navigateToHome() {\r\n\r\n            history.push('/');\r\n\r\n        }\r\n\r\n        function navigateToContact() {\r\n\r\n            history.push('/contact');\r\n\r\n        }\r\n\r\n    return(\r\n\r\n        <>\r\n\r\n            <Navbar bg={\"dark\"} variant={\"dark\"} className={\"justify-content-center\"}>\r\n\r\n                <Nav>\r\n\r\n                    <Nav.Item className={\"px-3\"}>\r\n\r\n                        <Nav.Link onClick={navigateToHome}>Home</Nav.Link>\r\n\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item className={\"px-3\"}>\r\n\r\n                        <Nav.Link onClick={navigateToContact}>Contact</Nav.Link>\r\n\r\n                    </Nav.Item>\r\n\r\n                </Nav>\r\n\r\n            </Navbar>\r\n\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    footer: {\r\n        width: '100%',\r\n        height: '3rem',\r\n        backgroundColor: '#02151f',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    footerContent: {\r\n\r\n        color: '#525252',\r\n        fontFamily: ['ring', 'serif'],\r\n        marginBottom: '0',\r\n        paddingLeft: '2rem'\r\n\r\n    }\r\n});\r\n\r\nexport function Footer() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n\r\n        <div className={classes.footer}>\r\n\r\n            <p className={classes.footerContent}>\r\n\r\n                Copyright Â© Mani Shankar 2020. All Rights Reserved.\r\n\r\n            </p>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\"\r\nimport {Button} from \"@material-ui/core\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    contactPage: {\r\n        minHeight: 'calc(100vh - 6.3rem)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        background: '#191919'\r\n    },\r\n\r\n    messageBox: {\r\n        paddingRight: '20rem',\r\n        paddingTop: '5rem',\r\n        \"& input\": {\r\n            width: '20rem',\r\n            height: '2.5rem',\r\n            marginLeft:'5px',\r\n            color: '#eee',\r\n            background: '#373233',\r\n            borderStyle: 'solid',\r\n            borderColor:'#efeaea'\r\n        },\r\n        \"& textarea\": {\r\n            width: '20rem',\r\n            marginLeft:'5px',\r\n            color: '#eee',\r\n            background: '#373233',\r\n            borderStyle: 'solid',\r\n            borderColor:'#efeaea'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n\r\n    submit: {\r\n        letterSpacing: '0.5rem',\r\n        color: '#fff',\r\n        background: '#0D0D0D',\r\n        marginLeft: '26%',\r\n        marginRight: '26%',\r\n        marginTop: '2rem',\r\n        cursor: 'pointer',\r\n        height: '3rem',\r\n        border: 'none',\r\n        borderRadius: '3px',\r\n    },\r\n\r\n    addressBox: {\r\n        paddingTop: '5rem',\r\n\r\n    },\r\n\r\n    address: {\r\n        \"& #addressTitle\": {\r\n            fontSize: '2rem',\r\n            fontWeight: 'bold',\r\n            fontFamily: 'opensans-bold',\r\n            color: '#EBEEEE',\r\n            marginBottom: '6px'\r\n        },\r\n        \"& #addressContent\": {\r\n            fontSize: '1rem',\r\n            fontWeight: 'bold',\r\n            fontFamily: 'opensans-bold',\r\n            color: '#636363',\r\n            marginTop: '15px'\r\n        }\r\n    },\r\n\r\n    linkedInIcon: {\r\n        fontSize: '30px'\r\n    },\r\n\r\n    centeringModal: {\r\n        position: 'fixed',\r\n        top: '40%'\r\n    },\r\n\r\n    emailAddress: {\r\n        fontSize: '2rem',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'opensans-bold',\r\n        color: '#EBEEEE',\r\n        marginBottom:'2rem',\r\n\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    query: {\r\n        fontSize: '2rem',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'opensans-bold',\r\n        color: '#EBEEEE',\r\n\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start'\r\n    }\r\n\r\n});\r\n\r\nexport function ContactPage() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => {\r\n\r\n        const message = {email, query};\r\n\r\n        // Below axios request to the express server.\r\n        // Once we get response from server, success message box is displayed.\r\n        (async () => {\r\n\r\n            try {\r\n\r\n                console.log(message);\r\n\r\n                const result = await Axios.post('/createQuery', message);\r\n\r\n                console.log(result);\r\n\r\n                setShow(true);\r\n\r\n                // To close the message box automatically after 5 secs.\r\n                setTimeout(handleClose, 5000);\r\n\r\n            } catch (err) {\r\n\r\n                console.error((err));\r\n\r\n            }\r\n\r\n        }) ();\r\n    }\r\n\r\n    // Below state is to set the latest text in the email text field.\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    // Below state is to set the latest text in the query text field.\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    return (\r\n\r\n        <div className={classes.contactPage}>\r\n\r\n            <div className={classes.messageBox}>\r\n\r\n                <div className={classes.emailAddress}>\r\n\r\n                    <h3> Enter your email: </h3>\r\n\r\n                    <input type=\"text\"\r\n                           placeholder={\"email\"}\r\n                           onChange={(event) => setEmail(event.target.value)}/>\r\n\r\n                </div>\r\n\r\n                <div className={classes.query}>\r\n\r\n                    <h3> Enter your query: </h3>\r\n\r\n                    <textarea\r\n                        placeholder={\"query\"}\r\n                        rows={5}\r\n                        onChange={(event) => setQuery(event.target.value)}/>\r\n\r\n                </div>\r\n\r\n                <Button type='submit'\r\n                        className={classes.submit}\r\n                        onClick={handleShow}>\r\n\r\n                    SUBMIT\r\n\r\n                </Button>\r\n\r\n            </div>\r\n\r\n            <Modal show={show}\r\n                   onHide={handleClose}\r\n                   className={classes.centeringModal}>\r\n\r\n                <Modal.Header closeButton>\r\n\r\n                    <Modal.Title>Message Box</Modal.Title>\r\n\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                    <br/>\r\n\r\n                    <h4>\r\n                        Hi, {email} !! <br /><br />\r\n                        You have successfully submitted a query!\r\n                    </h4>\r\n\r\n                    <br/>\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n\r\n            <div className={classes.addressBox}>\r\n\r\n                <div className={classes.address}>\r\n\r\n                    <h4 id={'addressTitle'}>\r\n                        Address and Phone\r\n                    </h4>\r\n\r\n                    <p id={'addressContent'}>\r\n\r\n                        Mani Shankar Kulkarni<br />\r\n                        1800 Silas Deane Hwy <br />\r\n                        Rocky Hill, CT 06067<br />\r\n\r\n                        <span>+(475)-319-8535</span>\r\n\r\n                    </p>\r\n\r\n                </div>\r\n\r\n                <div className={classes.linkedInIcon}>\r\n\r\n                    <a href=\"https://www.linkedin.com/in/manishankarkulkarni/\">\r\n\r\n                        <FontAwesomeIcon icon={faLinkedin} />\r\n\r\n                    </a>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/header-background.c4c61fc3.JPG\";","export default __webpack_public_path__ + \"static/media/ManiSK.3ff101d9.jpeg\";","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Col from \"react-bootstrap/cjs/Col\";\r\nimport Row from \"react-bootstrap/cjs/Row\";\r\nimport Image from \"react-bootstrap/cjs/Image\";\r\nimport ProfileImage from \"../images/ManiSK.jpeg\";\r\n\r\nconst useStyles = makeStyles({\r\n        aboutMe: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: '#2B2B2B',\r\n            paddingTop: '96px',\r\n            paddingBottom: '96px'\r\n        },\r\n        imageItem: {\r\n            position: 'relative',\r\n            width: '120px',\r\n            height: '120px',\r\n            borderRadius: '100%'\r\n        },\r\n        detailsItem: {\r\n            paddingRight: '5%',\r\n            \"& h2\": {\r\n                color: '#fff',\r\n                marginBottom: '12px',\r\n                fontSize: '2rem',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'opensans-bold'\r\n            },\r\n            \"& p\": {\r\n                lineHeight: '30px',\r\n                color: '#7A7A7A'\r\n            },\r\n            \"& span\": {\r\n                lineHeight: '30px',\r\n                color: '#7A7A7A',\r\n                float: 'right'\r\n            }\r\n        },\r\n    }\r\n)\r\n\r\nexport function AboutMe() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div className={classes.aboutMe}>\r\n\r\n            <Row>\r\n\r\n                <Col xs={'3'}>\r\n                    <Image className={classes.imageItem}  src={ProfileImage} alt=\"Tim Baker Profile Pic\" />\r\n                </Col>\r\n\r\n                <Col xs={'9'} className={classes.detailsItem}>\r\n                    <h2>About Me</h2>\r\n\r\n                    <p>I am an aspiring Full-Stack Developer.\r\n                        I enjoy creating web and mobile applications.\r\n                    </p>\r\n                    <span>P.S: I watch and play soccer.</span>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    projectWork: {\r\n        background: '#ebeeee',\r\n        paddingTop: '90px',\r\n        paddingBottom: '60px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems:'center',\r\n        \"& h1\": {\r\n            fontSize: '1.5rem',\r\n            fontFamily: 'opensans-bold',\r\n            letterSpacing: '1px',\r\n            marginBottom: '48px',\r\n            color: '#95A3A3'\r\n        },\r\n        \"& h3\": {\r\n            fontFamily: 'opensans-bold',\r\n            letterSpacing: '1px'\r\n        },\r\n        \"& p\": {\r\n            paddingTop: '3rem',\r\n            textAlign: 'start',\r\n            width: '70%',\r\n            color: '#758080'\r\n        },\r\n        \"& h6\": {\r\n            alignSelf: 'flex-start',\r\n            paddingLeft: '15rem',\r\n            fontFamily: 'opensans-bold',\r\n            letterSpacing: '1px'\r\n        }\r\n    },\r\n    webSite: {\r\n        paddingLeft: '50%',\r\n        \"& a\": {\r\n            textAlign: 'center',\r\n            borderBottom: 'solid'\r\n        }\r\n    },\r\n    codeSampleDesign: {\r\n        lineHeight: '2rem',\r\n        fontSize: '12px',\r\n\r\n    }\r\n})\r\n\r\n\r\nconst codeSample = \"\" +\r\n    \"                    @Controller\\n\" +\r\n    \"                    public class ArticleController {\\n\" +\r\n    \"                        @RequestMapping(\\\"/articleSelected\\\")\\n\" +\r\n    \"                            public ModelAndView article(@RequestParam(\\\"articleTitle\\\") String articleTitle, @RequestParam(\\\"categoryType\\\") String categoryType) {\\n\" +\r\n    \"                            ModelAndView article_model = new ModelAndView();\\n\" +\r\n    \"                            System.out.println(categoryType);\\n\" +\r\n    \"                            String key  = categoryType + \\\"/\\\" + articleTitle + \\\".docx\\\" ;\\n\" +\r\n    \"                            List<XWPFParagraph> paraList = null;\\n\" +\r\n    \"                            List<XWPFPictureData> pic = null;\\n\" +\r\n    \"                            ArrayList<String> imagesInFile = new ArrayList<String>();\\n\" +\r\n    \"                            try {\\n\" +\r\n    \"                            System.out.println(articleTitle);\\n\" +\r\n    \"                            BasicAWSCredentials awsCreds = new BasicAWSCredentials(\\\"**********\\\", \\\"*****\\\");\\n\" +\r\n    \"                            AmazonS3 s3Client = AmazonS3ClientBuilder.standard().withCredentials(new AWSStaticCredentialsProvider(awsCreds)).withRegion(\\\"us-east-2\\\").build();\\n\" +\r\n    \"                            S3Object object = s3Client.getObject(new GetObjectRequest(\\\"vasiblog\\\", key));\\n\" +\r\n    \"                            InputStream objectData = object.getObjectContent();\\n\" +\r\n    \"                            XWPFDocument docx = new XWPFDocument(objectData);\\n\" +\r\n    \"                            String baseHtml = \\\"\\\";\\n\" +\r\n    \"                            Document doc = Jsoup.parse(baseHtml);\\n\" +\r\n    \"                            String imagePath = null;\\n\" +\r\n    \"                            String base64Image = null;\\n\" +\r\n    \"                            pic = docx.getAllPictures();\\n\" +\r\n    \"                            Iterator<XWPFPictureData> iterator = pic.iterator();\\n\" +\r\n    \"                            while(iterator.hasNext()) {\\n\" +\r\n    \"                            XWPFPictureData pic1 = iterator.next();\\n\" +\r\n    \"                            byte[] bytepic = pic1.getData();\\n\" +\r\n    \"                            base64Image = Base64.getEncoder().encodeToString(bytepic);\\n\" +\r\n    \"                            imagesInFile.add(base64Image);\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                            paraList = docx.getParagraphs();\\n\" +\r\n    \"                            int imageCount = 0;\\n\" +\r\n    \"                            String a = new String();\\n\" +\r\n    \"                            for(int i=0;i<paraList.size();i++) {\\n\" +\r\n    \"                            a = paraList.get(i).getText();\\n\" +\r\n    \"                            if(a.isEmpty()) {\\n\" +\r\n    \"                            imagePath = \\\"data:image/jpg;base64,\\\"+ imagesInFile.get(imageCount);\\n\" +\r\n    \"                            doc.body().appendElement(\\\"img\\\").attr(\\\"src\\\", imagePath).attr(\\\"class\\\", \\\"img-fluid\\\").attr(\\\"width\\\",\\\"100\\\").attr(\\\"height\\\",\\\"70\\\");\\n\" +\r\n    \"                            imageCount++;\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                            if(i == 0) {\\n\" +\r\n    \"                            article_model.addObject(\\\"articleTitle\\\", a);\\n\" +\r\n    \"                            doc.body().appendElement(\\\"br\\\");\\n\" +\r\n    \"                        } else {\\n\" +\r\n    \"                            doc.body().appendElement(\\\"a\\\").appendText(a).addClass(\\\"articleText\\\");\\n\" +\r\n    \"                            doc.body().appendElement(\\\"br\\\");\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                            docx.close();\\n\" +\r\n    \"                            article_model.addObject(\\\"articleText\\\", doc.toString());\\n\" +\r\n    \"                            article_model.setViewName(\\\"articlePage\\\");\\n\" +\r\n    \"                            return article_model;\\n\" +\r\n    \"                        } catch (FileNotFoundException e) {\\n\" +\r\n    \"                            e.printStackTrace();\\n\" +\r\n    \"                        } catch (IOException e) {\\n\" +\r\n    \"                            e.printStackTrace();\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                            return null;\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                            @Bean\\n\" +\r\n    \"                            public MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\\n\" +\r\n    \"                            ObjectMapper mapper = new ObjectMapper();\\n\" +\r\n    \"                            mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);\\n\" +\r\n    \"                            MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter(\\n\" +\r\n    \"                            mapper);\\n\" +\r\n    \"                            return converter;\\n\" +\r\n    \"                        }\\n\" +\r\n    \"                        }\"\r\n\r\nexport function ProjectWork() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div className={classes.projectWork}>\r\n\r\n            <h1>CHECK OUT MY WORK</h1>\r\n\r\n            <h3>PROJECT:  VASISHTA BLOGS</h3>\r\n            <Link\r\n                href={\"http://ec2-3-12-225-3.us-east-2.compute.amazonaws.com/\"}\r\n                className={classes.webSite}>\r\n                <a>Click here to browse the site</a>\r\n            </Link>\r\n\r\n            <p>\r\n                This website was created with basic HTML, CSS and JSP pages.\r\n                Website is launched in AWS and uses, AWS EC2, AWS S3 bucket\r\n                services. It is created in such a way that the author can simply\r\n                upload his blog as a word document in a private S3 bucket and\r\n                the server first gets the names of all the files in a category\r\n                and displays them. When user clicks on any blog title, it then\r\n                fetches and process the word document and displayed as plain\r\n                HTML file.\r\n            </p>\r\n\r\n            <h6>\r\n               Below is some of the coding related to the word processing:\r\n            </h6>\r\n\r\n            <code>\r\n                <pre className={classes.codeSampleDesign}>\r\n\r\n                    {codeSample}\r\n\r\n                </pre>\r\n            </code>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport MyImage from \"../images/header-background.JPG\";\r\nimport {AboutMe} from \"../about-me/AboutMe\";\r\nimport {ProjectWork} from \"../projects/ProjectWorks\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    homePage: {\r\n        minHeight: '100vh',\r\n        verticalAlign: 'middle',\r\n        width: '100%',\r\n        paddingTop: '5rem',\r\n        background: '#161415',\r\n        backgroundImage: `url(${MyImage})`,\r\n        backgroundPosition: 'top',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        textAlign: 'center',\r\n        margin: ['0', 'auto'],\r\n    },\r\n\r\n    homePageText: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems:'center',\r\n        width: '100%',\r\n        \"& h1\": {\r\n            color: '#fff',\r\n            letterSpacing: '-2px',\r\n            width: '100%',\r\n            fontFamily: 'Tangerine',\r\n            fontSize: '5rem',\r\n            fontWeight: 'bold'\r\n        },\r\n        \"& h3\": {\r\n            color: '#fff',\r\n            width: '70%',\r\n        },\r\n        \"& hr\": {\r\n            width: '70%',\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport function HomePage() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.homePage}>\r\n\r\n                <div className={classes.homePageText}>\r\n\r\n                    <h1>Mani Shankar Kulkarni</h1>\r\n\r\n                    <h3>I'm a Student @University of New Haven.</h3>\r\n\r\n                    <h3>Pursuing my Masters in Computer Science.</h3>\r\n\r\n                    <hr />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <AboutMe />\r\n\r\n            <ProjectWork />\r\n\r\n        </>\r\n\r\n    )\r\n}","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {NavigationBar} from \"./navigation-bar/NavigationBar\";\nimport {Footer} from \"./footer/Footer\";\nimport {ContactPage} from \"./contact-page/ContactPage\";\nimport {HomePage} from \"./home-page/HomePage\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nexport default function App() {\n\n  return (\n\n      <BrowserRouter>\n\n          <CssBaseline />\n\n          <div>\n\n              <NavigationBar/>\n\n              <Switch>\n\n                  <Route path={'/contact'}>\n                      <ContactPage/>\n                  </Route>\n\n                  <Route path={'/'}>\n                      <HomePage/>\n                  </Route>\n\n              </Switch>\n\n              <Footer/>\n\n          </div>\n\n      </BrowserRouter>\n\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}